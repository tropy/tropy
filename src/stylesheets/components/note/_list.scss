//
// Note list
// --------------------------------------------------

$panel-separator-color: #ddd !default;

.note-list {
  flex: 1 1 0;
  display: flex;
  flex-direction: column;

  .scroll-container {
    position: relative;
    z-index: 0;
  }

  .note {
    padding: $note-padding-top $default-padding-horizontal $note-padding-bottom;
    position: relative;
    contain: content;

    &::before {
      content: " ";
      position: absolute;
      top: 0;
      right: $default-padding-horizontal;
      left: $default-padding-horizontal;
      height: 1px;
      background: $panel-separator-color;

      @include state(
        ".note-panel:not(.has-active) .note-list .scroll-container:focus"
      ) {
        background-color: $panel-nested-focus-separator-color;
      }

      .is-blurred .item-mode & {
        background-color: $panel-blurred-separator-color;
      }
    }

    &:first-child {
      &::before {
        content: none;
      }
    }

    &.active {
      color: $note-list-active-color;
      background: $note-list-active-bg;

      @include state(".note-list .scroll-container:focus") {
        color: $note-list-focus-color;
        background: $note-list-focus-bg;
      }

      .is-blurred .item-mode & {
        background-color: $note-list-blurred-bg;
      }

      &::before {
        content: none;
      }

      & + .note {
        border-top: 1px solid $note-list-active-bg;
        padding-top: ($note-padding-top - 1px);

        @include state(".note-list .scroll-container:focus") {
          border-top-color: $note-list-focus-bg;
        }

        .is-blurred .item-mode & {
          border-top-color: $note-list-blurred-bg;
        }

        &::before {
          content: none;
        }
      }
    }

    // CSS multiline truncate
    .css-multiline-truncate {
      @include css-multiline-truncate($note-lines);

      // Prevent visual glitch when empty note gets deleted
      // by clicking on another note in the list
      &:empty {
        visibility: hidden;
      }

      @include state(".note:not(.active)") {
        transition: visibility 0s linear 1s;
      }
    }
  }
}
