//
// Esper
// --------------------------------------------------

.esper {
  flex: 1 1 0;
  background: $esper-bg;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  contain: strict;

  &:not(:focus-within) {
    .toolbar-left,
    .toolbar-right,
    .esper-panel > * { // todo
      opacity: 0.6;
    }
  }

  &:not(.overlay-mode) {
    .slider-handle {
      background-color: $esper-slider-handle-bg;

      @include state(".disabled .slider-handle") {
        background-color: $esper-slider-handle-disabled-bg;
      }
    }

    .slider-value {
      color: $esper-slider-value-color;
    }

    // State mixin does not work here
    .slider:focus {
      .slider-handle {
        background-color: $slider-focus-bg;
        border-color: transparent;
      }

      .slider-range {
        background-color: $slider-focus-bg;
      }
    }

    .btn-default {
      background-color: $esper-btn-default-bg;
      border-color: $esper-btn-default-border;

      &:active {
        background-color: $esper-btn-default-active-bg;
      }

      &.disabled,
      &[disabled] {
        background-color: $esper-btn-default-bg;
      }
    }
  }

  &.overlay-mode {
    color: $esper-overlay-color;
  }

  .esper-header {
    flex: 0 0 auto;
    position: relative;
    z-index: $zindex-esper-header;
    height: $toolbar-height;

    @include state(".esper.overlay-mode") {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
    }

    .frameless & {
      -webkit-app-region: drag;
      height: os($toolbar-frameless-height);
    }
  }

  .esper-view-container {
    flex: 1 1 0;
    display: flex;
    position: relative;

    .side-by-side & {
      flex-direction: column;
    }
  }

  .esper-view {
    flex: 1 1 0;
    max-width: 100%;
    max-height: 100%;
    position: relative;

    @include state(".esper.texture-missing") {
      visibility: hidden;
    }

    canvas {
      position: absolute;
    }
  }

  @each $key, $val in $esper-cursor {
    &.#{$key} {
      .esper-view {
        cursor:
          -webkit-image-set(
            cursor-url("#{map-get($val, 'default')}@1x.svg") 1x,
            cursor-url("#{map-get($val, 'default')}@2x.svg") 2x
          )
          map-get($val, "x") map-get($val, "y"),
          default;
      }
    }
  }
}
