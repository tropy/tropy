@use "../../abstracts/config" as *;

//
// Esper panel
// --------------------------------------------------

.esper-panel {
  flex: 0 0 $esper-panel-width;
  display: flex;
  flex-direction: column;
  margin-right: -$esper-panel-width; // Permanently set two negative margins to avoid transition glitch after layout switch
  margin-bottom: -$esper-panel-height;
  max-width: 100%; // Keep panel size stable
  max-height: 100%;
  background: $esper-bg;
  position: relative; // Must be over esper-view for a clean transition in solid mode
  box-shadow: none; // Hide box-shadow
  transition: box-shadow 0s linear 0.3s, margin-right 0.3s ease;

  .panel-visible :is(&) {
    box-shadow: -1px 0 0 $esper-shadow;
    margin-right: 0;
    margin-bottom: 0;
    transition: box-shadow 0s linear, margin-right 0.3s ease;
  }

  .side-by-side:not(.esper-maximized) &,
  .side-by-side.esper-maximized .text-overlay-split & {
    flex: 0 0 $esper-panel-height;
    box-shadow: none; // Hide box-shadow
    transition: box-shadow 0s linear 0.3s, margin-bottom 0.3s ease;

    .panel-visible :is(&) {
      box-shadow: 0 -1px 0 $esper-shadow;
      margin-right: 0;
      margin-bottom: 0;
      transition: box-shadow 0s linear, margin-bottom 0.3s ease;
    }
  }

  .overlay-mode & {
    position: absolute;
    top: zoom($toolbar-height);
    right: 0;
    bottom: 0;
    width: $esper-panel-width;

    .frameless & {
      top: zoom($toolbar-frameless-height);

      @if $platform == win32 {
        top: zoom($toolbar-height);
      }
    }

    .project:not([class*="enter"]) & {
      background: $esper-overlay-bg;
      backdrop-filter: blur($esper-blur-radius);
    }
  }

  .filter-controls {
    flex: 1 1 0;
    overflow-y: scroll;
    overscroll-behavior: contain;
    padding: 19px $default-spacing-x 0; // todo
    margin: auto;
    width: 100%;
    max-width: $esper-panel-max-size;
  }

  .filter-control {
    .flex-row {
      margin-bottom: -3px;
    }

    .icon {
      margin-right: $space-xs;

      .overlay-mode & {
        color: $esper-overlay-icon-color;
      }
    }

    .title {
      margin-right: auto;
    }

    .slider {
      width: calc(100% + 2px);
      margin-bottom: 7px; // 24px
    }

    .checkbox {
      padding: 0;
    }
  }

  .revert.btn-container {
    flex: 0 0 auto;
    padding: 6px $default-spacing-x;
    margin: auto;
    width: 100%;
    max-width: $esper-panel-max-size;
  }

  .esper:not(.overlay-mode) & {
    .checkbox,
    .radio {
      [type] {
        background: $esper-checkbox-bg;
        border: 1px solid $esper-input-border;

        &:active {
          background: $esper-checkbox-checked-bg;
          border-color: $esper-checkbox-checked-border;
        }

        &[disabled] {
          background: $esper-checkbox-disabled-bg;
          border-color: $esper-checkbox-disabled-border;
        }

        &:checked {
          background: $esper-checkbox-checked-bg;
          border-color: $esper-checkbox-checked-border;

          &:active {
            background: $esper-checkbox-checked-active-bg;
            border-color: $esper-checkbox-checked-active-border;
          }

          &[disabled] {
            background: $esper-checkbox-disabled-bg;
            border-color: $esper-checkbox-disabled-border;

            &::before,
            &::after {
              background: $esper-checkbox-checked-bg;
            }
          }
        }
      }
    }
  }
}
