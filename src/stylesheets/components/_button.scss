@use "../abstracts/config" as *;

//
// Button
// --------------------------------------------------

:where(.btn) {
  font: {
    family: inherit;
    size: inherit;
  }
  line-height: inherit;
  color: inherit;
  border: 0;
  border-radius: $border-radius-small;
  padding: ($padding-base-vertical + 1px) $padding-base-horizontal;
  display: inline-block; // For span as btn
  text-align: center;
  transition: border-color $input-btn-transition, box-shadow $input-btn-transition;

  &[disabled],
  &.disabled {
    opacity: $disabled-opacity;
    pointer-events: none;
  }

  .frameless & {
    -webkit-app-region: no-drag;
  }

  &.min-width {
    min-width: 80px;
  }
}

.btn-default {
  color: $btn-default-color;
  background: $btn-default-bg;
  border: 1px solid $btn-default-border;
  padding: $padding-base-vertical $padding-base-horizontal;

  @include input-btn-focus(":focus-visible");

  &:active {
    background: $btn-default-active-bg;
  }
}

.btn-primary {
  color: $btn-primary-color;
  background: $btn-primary-bg;

  @include input-btn-focus(":focus-visible");

  &:active {
    background: $btn-primary-active-bg;
  }
}

.btn-lg {
  font-size: $font-size-large;
  height: $input-height-large;
  padding: 0 $padding-large-horizontal;
  border-radius: $border-radius-base;
}

.btn-xl {
  border-radius: $border-radius-large;
}

.btn-block {
  display: block;
  width: 100%;
}

.btn-icon {
  display: inline-flex;
  background-color: $btn-icon-bg;
  padding: $btn-icon-padding;

  .icon {
    .btn-icon:active :is(&),
    .btn-icon.active :is(&) {
      color: $icon-active-color;
    }
  }
}

.btn-toggle {
  display: flex;
  border: 1px solid $input-border;
  background-color: $input-bg;
  transition: none;

  @include input-btn-focus(":has(:focus-visible)");

  &:has(:checked) {
    color: $btn-primary-color;
    background-color: $btn-primary-bg;
    border-color: transparent;
  }

  label {
    flex: 1 1 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
