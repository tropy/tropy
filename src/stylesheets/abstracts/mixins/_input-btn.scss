//
// Forms & buttons
// --------------------------------------------------

/* stylelint-disable custom-property-pattern */

@mixin input-btn-focus($focus: ":focus", $color: $input-btn-focus-color) {
  &#{$focus} {
    border-color: $color !important;
    box-shadow: 0 0 0 2px $color !important;
  }
}

@mixin form-shading-level($n) {
  ::-webkit-input-placeholder,
  .placeholder {
    color: var(--level-#{$n}-placeholder-color);
  }

  fieldset {
    background-color: var(--level-#{$n}-fieldset-bg);
  }

  .form-control,
  .btn-toggle:not(:has(:checked)) {
    border-color: var(--level-#{$n}-border);
    background-color: var(--level-#{$n}-bg);

    @include input-btn-focus;

    &[readonly],
    &[disabled],
    &.disabled,
    &.file-select {
      background-color: var(--level-#{$n}-input-bg-readonly);
    }
  }

  .checkbox,
  .radio {
    [type] {
      background-color: var(--level-#{$n}-bg);
      border-color: var(--level-#{$n}-border);

      &:active {
        background-color: $checkbox-checked-bg;
        border-color: $checkbox-checked-border;
      }

      &[disabled] {
        background-color: var(--level-#{$n}-input-bg-readonly);
        border-color: var(--level-#{$n}-border);
      }

      &:checked {
        background-color: $checkbox-checked-bg;
        border-color: $checkbox-checked-border;

        &:active {
          background-color: $checkbox-checked-active-bg;
          border-color: $checkbox-checked-active-border;
        }

        &[disabled] {
          background-color: var(--level-#{$n}-input-bg-readonly);
          border-color: var(--level-#{$n}-border);

          &::before,
          &::after {
            background: $checkbox-checked-bg;
          }
        }
      }
    }
  }

  .btn-default {
    border-color: var(--level-#{$n}-border);
    background-color: var(--level-#{$n}-bg);

    &:active {
      background-color: var(--level-#{$n}-btn-default-active-bg);
    }
  }
}
