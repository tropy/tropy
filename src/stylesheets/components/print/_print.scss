@use "../../abstracts/config" as *;

//
// Print
// --------------------------------------------------

@page {
  margin: $print-page-margin; // Set default margin
}

* {
  box-sizing: border-box;
}

html {
  font-family: system-ui;
  font-size: $print-font-size;
  line-height: $print-font-size * $print-line-height; // Needs unit for some reason to be correct
  letter-spacing: 0.015em;

  @if $platform == darwin {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; // San Francisco is not embeddable
  }
}

body {
  margin: 0;
  background-color: #fff;
}

.container {
  display: flex;
  break-after: page;
  height: 100vh;
  overflow: hidden;

  @media (orientation: portrait) {
    flex-direction: column;
  }

  &.overflow {
    height: auto;
    overflow: visible;

    @media (orientation: landscape) {
      flex-wrap: wrap;
    }
  }
}

.photo-container {
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;

  .metadata &,
  .notes:not(.overflow) & {
    @media (orientation: portrait) {
      flex: 0 0 100vw;
      height: 100vw; // Prevent cropped photos in overflow mode
    }

    @media (orientation: landscape) {
      flex: 0 0 100vh;
      height: 100vh;
    }
  }

  .container.notes:not(.metadata).overflow & {
    @media (orientation: portrait) {
      flex: 0 0 100vh;
      height: 100vh; // Prevent cropped photos in overflow mode
    }

    @media (orientation: landscape) {
      flex: 0 0 100vw;
      height: 100vh;
    }
  }
}

img {
  display: block;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;

  // Prevent rotated photos from being cropped in photo-only layout
  &[class*="90"],
  &[class*="270"] {
    .portrait:not(.metadata, .notes) & {
      max-width: 100vh;
      max-height: 100vw;
    }

    .landscape:not(.metadata, .notes) & {
      max-width: 100vh;
      max-height: 100vw;
    }
  }
}

.metadata-container {
  flex: 1 0 auto;
  display: flex;

  @media (orientation: landscape) {
    flex: 1 1 auto;
    flex-direction: column;
    padding-left: calc($print-page-margin / 2);

    .text-only & {
      flex: 1 1 auto;
      flex-direction: row;
      padding-left: 0;
    }
  }

  .overflow & {
    @media (orientation: portrait) {
      min-height: calc(100vh - 100vw);
    }

    @media (orientation: landscape) {
      flex: 0 0 calc(100vw - 100vh);
    }
  }

  .overflow.text-only & {
    @media (orientation: portrait) {
      min-height: 0;
    }

    @media (orientation: landscape) {
      flex: 1 1 auto;
    }
  }
}

.col {
  @media (orientation: portrait) {
    flex: 0 0 50%;

    &:first-child {
      padding-right: calc($print-page-margin / 4);
    }

    &:last-child {
      padding-left: calc($print-page-margin / 4);
    }
  }

  @media (orientation: landscape) {
    .text-only & {
      flex: 0 0 50%;

      &:first-child {
        padding-right: calc($print-page-margin / 4);
      }

      &:last-child {
        padding-left: calc($print-page-margin / 4);
      }
    }
  }
}

.metadata-heading,
.notes-heading {
  display: flex;
  align-items: flex-end;
  font-size: inherit;
  font-weight: 400;
  padding-bottom: calc($print-font-size / 4 + 0.5pt);
  margin: 0 0 calc($print-font-size / 2);
  position: relative;

  // Hairline hack
  &::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    border-bottom: 1pt solid #000;
    transform: scaleY(0.5);
    transform-origin: bottom;
  }
}

.metadata-heading {
  @media (orientation: portrait) {
    height: $print-page-margin;

    .text-only & {
      height: calc($print-page-margin / 2);
    }
  }

  @media (orientation: landscape) {
    height: calc($print-page-margin / 2 - $print-font-size / 2);

    .col:first-child > :first-child & {
      height: calc($print-page-margin / 2);
    }

    .text-only & {
      height: calc($print-page-margin / 2);
    }
  }
}

.metadata-fields {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.metadata-field {
  display: flex;
}

label {
  flex: 0 0 33%;
  text-align: right;
  padding-right: calc($print-page-margin / 16);
  font-weight: 300;
}

.value,
.note {
  flex: 0 0 67%;
  padding-left: calc($print-page-margin / 16);
  overflow-wrap: anywhere;
}

.note-list {
  .container:not(.overflow) & {
    .note-container + .note-container {
      margin-top: ($print-font-size * $print-line-height);
    }
  }

  .overflow & {
    margin-top: $print-page-margin - 3.7mm;
    font-size: $print-font-size-large;
    line-height: $print-font-size-large * $print-line-height-large;
    letter-spacing: 0;
  }

  label {
    .overflow & {
      display: block;
      font-size: $print-font-size;
      font-weight: 400;
      text-align: left;
      padding: 0;
    }
  }
}

.note-container {
  display: flex;

  .overflow & {
    display: block;

    & + .note-container {
      margin-top: ($print-font-size-large * $print-line-height-large);
    }
  }
}

.notes-heading {
  height: calc($print-page-margin / 2 - $print-font-size / 2);

  .container:not(.metadata) & {
    height: calc($print-page-margin / 2);
  }
}
