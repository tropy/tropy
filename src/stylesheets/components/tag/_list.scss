//
// Tag list
// --------------------------------------------------

.tag-list {
  .icon-tag {
    &:not([class*="color"]) {
      .color {
        color: $icon-tag-color;

        .nested-tab-focus & {
          color: $icon-tag-nested-focus-color;
        }
      }

      .border {
        color: $icon-tag-border;

        .nested-tab-focus & {
          color: $icon-tag-nested-focus-border;
        }
      }
    }
  }

  .sidebar & {
    .tag {
      display: flex;
      align-items: center;
      height: $line-height-large;
      padding: 0 $default-padding-horizontal 0 $list-tree-padding-left;

      &.active {
        @extend %list-active;

        .vibrancy & {
          background-color: $sidebar-vibrancy-list-active-bg;
        }

        .is-blurred & {
          @if $platform == darwin {
            background-color: $sidebar-blurred-list-active-bg-darwin;
          }

          @if $platform == linux {
            background-color: $sidebar-blurred-list-bg-linux;
          }
        }

        &:focus {
          @extend %list-focus;

          .vibrancy & {
            background-color: $sidebar-vibrancy-list-focus-bg;
          }
        }
      }

      .icon-tag {
        .vibrancy:not(.is-blurred) & {
          &:not([class*="color"]) {
            svg {
              clip-path: path("M0,0V16H16V0ZM8,13a5,5,0,1,1,5-5A5,5,0,0,1,8,13Z");

              .color {
                display: none;
              }

              .border {
                color: $icon-tag-vibrancy-border;

                @include state(".tag.active:focus .icon-tag") {
                  color: $list-focus-color;
                }
              }
            }
          }
        }

        .is-blurred & {
          &:not([class*="color"]) {
            .color {
              @if $platform == darwin {
                color: $sidebar-blurred-bg;
              }
            }
          }
        }

        @include state(".tag.active") {
          &:not([class*="color"]) {
            .color {
              color: $list-active-bg;
            }

            .border {
              color: $tag-list-active-border;
            }
          }
        }

        @include state(".tag.active:focus") {
          &:not([class*="color"]) {
            .color {
              color: $list-focus-bg;
            }
          }

          .border {
            color: $list-focus-color;
          }
        }
      }
    }
  }

  .panel & {
    flex: 1 1 0;
    overflow-y: scroll;
    overscroll-behavior: contain;
    padding: $space-min 0 0;
    position: relative;

    li {
      display: flex;
      align-items: center;
      height: $line-height-large;
      padding: 0 $default-padding-horizontal;

      &.mixed {
        .editable:not(.active) {
          display: flex;
          @extend %mixed-indicator;

          .truncate {
            flex: 0 1 auto;
          }
        }
      }

      &:focus {
        @extend %list-focus;

        .icon.icon-tag { // Needs specifity to override nested focus
          &:not([class*="color"]) {
            .color {
              color: $list-focus-bg;
            }
          }

          .border {
            color: $list-focus-color;
          }
        }
      }

      .icon-tag {
        margin-right: $space-xs;
      }

      .name {
        margin-right: auto;
        min-width: 0;
      }

      .icon-pluscircles {
        margin-left: $space-min - $shim;
        display: none;

        @include state("li:focus") {
          display: block;
        }
      }
    }
  }
}

.add-tag-container {
  flex: 0 0 auto;
  padding: ($space-min + $space-min / 2) $default-padding-horizontal 2px;

  .input-group {
    position: relative;

    &::before {
      content: var(--placeholder);
      position: absolute;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      line-height: $input-height-base;
      pointer-events: none;
      color: $add-tag-placeholder-color-default;
      mix-blend-mode: if($theme == "light", multiply, lighten); // Prevent placeholder text from covering the text cursor.
      z-index: 4;

      transition:
        left $add-tag-transition,
        transform $add-tag-transition,
        color $add-tag-transition;

      @include state(".input-group:focus-within") {
        left: $padding-base-horizontal;
        transform: translateX(0);
        color: $input-color-placeholder;
      }
    }
  }

  .form-control {
    cursor: default;
    position: relative;

    &:not([disabled]) {
      background: $add-tag-default-bg;
    }

    .nested-tab-focus & {
      background: $add-tag-nested-focus-bg;
      border-color: $add-tag-nested-focus-border-color;
    }

    .is-blurred .item-mode & {
      @if $platform == darwin {
        background: $add-tag-blurred-bg-darwin;
        border-color: $add-tag-blurred-border-color-darwin;
      }
    }

    &:focus {
      cursor: auto;
      background: $add-tag-focus-bg;
      border-color: $input-btn-focus-color; // Reset to form-control
      box-shadow: 0 0 0 2px $input-btn-focus-color, 0 0 0 2px $panel-bg;
    }

    &:not([value=""]) {
      z-index: 5;
    }
  }
}
