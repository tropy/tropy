//
// Fake window controls
// --------------------------------------------------

.window-controls {
  position: absolute;
  z-index: $zindex-window-controls;
  display: flex;

  button {
    border: 0;
    padding: 0;
    -webkit-app-region: no-drag;
  }

  @if $platform == win32 {
    top: 0;
    left: 0;
    padding-left: zoom(15px);
    height: zoom(38px);
    display: flex;
    align-items: center;

    #prefs &,
    #about & {
      display: none;
    }

    .app-icon {
      width: zoom(18px);
      height: zoom(18px);
      margin-right: zoom(2px);
      background-size: 100%;
      background-image:
        image-set(
          icon-url("window/win32/#{$theme}/18x18.png") 1x,
          icon-url("window/win32/#{$theme}/36x36.png") 2x
        );
    }

    .menu {
      width: zoom(26px);
      height: zoom(26px);
      background: icon-url("window/win32/#{$theme}/more.svg") no-repeat zoom(4px) / zoom(16px);
      border: 1px solid transparent;
      border-radius: zoom(3px);

      .ready & {
        // Use ready class to prevent black border during reload
        transition: border-color $input-btn-transition, box-shadow $input-btn-transition;
      }

      &:hover {
        background-color: rgba(0, 0, 0, if($theme == light, 0.05, 0.1));
      }
      
      &:focus-visible {
        @include input-btn-focus(":focus-visible");
        background-color: $sidebar-bg; // Prevent rendering glitch
      }

      &:active {
        background-image: icon-url("window/win32/#{$theme}/more-active.svg");
        background-color: rgba(0, 0, 0, if($theme == light, 0.1, 0.3));
      }
    }
  }

  @if $platform == linux {
    top: zoom(6px);
    column-gap: zoom(3px);

    .window-controls-left & {
      left: zoom(6px);
    }

    .window-controls-right & {
      right: zoom(6px);
    }

    .is-blurred & {
      opacity: 0.5; // 'filter' would break position fixed of the menu button
      transition: filter 0.2s ease-out;
    }

    button {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: zoom(5px);
      background-repeat: no-repeat;
      background-position: center center;
      background-color: transparent;
      background-size: zoom(16px);

      &::after {
        content: "";
        width: zoom(24px);
        height: zoom(24px);
        border-radius: 50%;
        transition: background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        background-color: if(
          $theme == "light",
          rgba(0, 0, 0, 0.08),
          rgba(255, 255, 255, 0.1)
        );

        @include state("button:hover") {
          background-color: if(
            $theme == "light",
            rgba(0, 0, 0, 0.12),
            rgba(255, 255, 255, 0.15)
          );
        }

        @include state("button:active") {
          background-color: if(
            $theme == "light",
            rgba(0, 0, 0, 0.24),
            rgba(255, 255, 255, 0.3)
          );
        }
      }
    }

    .menu {
      min-width: zoom(34px);
      min-height: zoom(34px);
      background-image: icon-url("window/linux/#{$theme}/menu.svg");
      border-radius: zoom(6px);
      transition-property: background-color, outline-color, outline-width, outline-offset;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
      outline: 0 solid transparent;
      outline-offset: zoom(4px);

      .window-controls-left & {
        position: fixed;
        right: zoom(6px);
      }

      .window-controls-right & {
        order: -1;
        margin-right: zoom(3px);
      }

      #prefs &,
      #about & {
        display: none;
      }

      &:hover {
        background-color: if(
          $theme == "light",
          rgba(0, 0, 0, 0.056),
          rgba(255, 255, 255, 0.07)
        );
      }

      &:active {
        background-color: if(
          $theme == "light",
          rgba(0, 0, 0, 0.128),
          rgba(255, 255, 255, 0.16)
        );
      }

      &:focus-visible {
        outline-width: zoom(2px);
        outline-offset: zoom(-2px);
        outline-color: $input-btn-focus-color;
      }

      &::after {
        content: none;
      }
    }

    .minimize {
      background-image: icon-url("window/linux/#{$theme}/minimize.svg");

      .not-minimizable & {
        display: none;
      }
    }

    .maximize {
      background-image: icon-url("window/linux/#{$theme}/maximize.svg");

      .is-maximized & {
        background-image: icon-url("window/linux/#{$theme}/is-maximized.svg");
      }

      .window-controls-left & {
        order: 3;
      }

      .not-maximizable &,
      :has(.no-project) & {
        display: none;
      }
    }

    .close {
      background-image: icon-url("window/linux/#{$theme}/close.svg");

      .is-full-screen & {
        display: none;
      }

      .window-controls-right & {
        order: 3;
      }
    }

    .fullscreen {
      background-image: icon-url("window/linux/#{$theme}/exit-fullscreen.svg");
      display: none;

      .is-full-screen & {
        display: flex;
      }

      .window-controls-right & {
        order: 3;
      }
    }
  }
}
